{"mappings":"AAAA,MAEMA,EAAa,SAEbC,EAAc,aAEpBC,KAAKC,iBAAiB,WAAW,SAASC,GACxCC,QAAQC,IAAI,2BAEZF,EAAMG,UAAU,WACd,MAAMC,QAAcC,OAAOC,KAAKV,SAG1BQ,EAAMG,IAAI,IAAIC,QAAQX,EAAa,CAACO,MAAO,WACnD,EALgB,IAOhBN,KAAKW,aACP,IAEAX,KAAKC,iBAAiB,YAAaC,IACjCC,QAAQC,IAAI,4BACZF,EAAMG,UAAU,WAGV,sBAAuBL,KAAKY,oBACxBZ,KAAKY,aAAaC,kBAAkBC,QAE9C,EANgB,IAShBd,KAAKe,QAAQC,OAAK,IAIpBhB,KAAKC,iBAAiB,SAASC,IACF,aAAvBA,EAAMe,QAAQC,MAChBhB,EAAMiB,YAAY,WAChB,IACE,MAAMC,QAAwBlB,EAAMkB,gBACpC,GAAIA,EACF,OAAOA,EAIT,aAD8BC,MAAMnB,EAAMe,QAE5C,CAAE,MAAOK,GACPnB,QAAQC,IAAI,iEAAkEkB,GAE9E,MAAMhB,QAAcC,OAAOC,KAAKV,GAEhC,aAD6BQ,EAAMiB,MAAMxB,EAE3C,CACF,EAhBkB,GAgBlB","sources":["src/sw.js"],"sourcesContent":["const VERSION = 1;\n// Define the cache name\nconst CACHE_NAME = `psd-v${VERSION}`;\n\nconst OFFLINE_URL = 'index.html';\n\nself.addEventListener('install', function(event) {\n  console.log('[ServiceWorker] Install');\n  \n  event.waitUntil((async () => {\n    const cache = await caches.open(CACHE_NAME);\n    // Setting {cache: 'reload'} in the new request will ensure that the response\n    // isn't fulfilled from the HTTP cache; i.e., it will be from the network.\n    await cache.add(new Request(OFFLINE_URL, {cache: 'reload'}));\n  })());\n  \n  self.skipWaiting();\n});\n\nself.addEventListener('activate', (event) => {\n  console.log('[ServiceWorker] Activate');\n  event.waitUntil((async () => {\n    // Enable navigation preload if it's supported.\n    // See https://developers.google.com/web/updates/2017/02/navigation-preload\n    if ('navigationPreload' in self.registration) {\n      await self.registration.navigationPreload.enable();\n    }\n  })());\n\n  // Tell the active service worker to take control of the page immediately.\n  self.clients.claim();\n});\n\n// Serve cached content when offline\nself.addEventListener('fetch', event => {\n  if (event.request.mode === 'navigate') {\n    event.respondWith((async () => {\n      try {\n        const preloadResponse = await event.preloadResponse;\n        if (preloadResponse) {\n          return preloadResponse;\n        }\n\n        const networkResponse = await fetch(event.request);\n        return networkResponse;\n      } catch (error) {\n        console.log('[Service Worker] Fetch failed; returning offline page instead.', error);\n\n        const cache = await caches.open(CACHE_NAME);\n        const cachedResponse = await cache.match(OFFLINE_URL);\n        return cachedResponse;\n      }\n    })());\n  }\n});\n"],"names":["$8258663c9262e710$var$CACHE_NAME","$8258663c9262e710$var$OFFLINE_URL","self","addEventListener","event","console","log","waitUntil","cache","caches","open","add","Request","skipWaiting","registration","navigationPreload","enable","clients","claim","request","mode","respondWith","preloadResponse","fetch","error","match"],"version":3,"file":"sw.3fef4cb3.js.map"}