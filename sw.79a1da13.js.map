{"mappings":"AAAO,IAAIA,EAAW,GACXC,EAAU,GCErB,MAAMC,EAAY,QAAQD,GAAmB,IAGvCE,EAAe,IAChBH,EACH,IACA,eAYFI,iBAAiB,WAAWC,GAAKA,EAAEC,UARnCC,iBACE,IACE,MAAMC,QAAcC,OAAOC,KAAKR,SAC1BM,EAAMG,OAAOR,EACrB,CAAE,MAAOS,GACPC,QAAQC,MAAM,mBAAoBF,EACpC,CACF,CAC6CG,MAQ7CX,iBAAiB,YAAYC,GAAKA,EAAEC,UANpCC,iBACE,MAAMS,QAAaP,OAAOO,aACpBC,QAAQC,IACZF,EAAKG,KAAIC,GAAOA,IAAQlB,GAAaO,OAAOY,OAAOD,KAEvD,CAC8CE,MAG9CC,KAAKnB,iBAAiB,SAASoB,IAC7BA,EAAMC,YACJhB,OAAOiB,MAAMF,EAAMG,SAChBC,MAAKC,GACAA,GAIGC,MAAMN,EAAMG,SAChBC,MAAKC,GACAA,EAASE,GACJtB,OAAOC,KAAKR,GAChB0B,MAAKpB,IACJA,EAAMwB,IAAIR,EAAMG,QAASE,EAASI,SAC3BJ,KAERK,OAAMpB,GAASD,QAAQC,MAAMA,KAG3Be,IAERK,OAAMpB,GAASD,QAAQC,MAAMA,OAEjCoB,OAAMpB,GAASD,QAAQC,MAAMA,KAAA","sources":["node_modules/@parcel/service-worker/service-worker.js","src/sw.js"],"sourcesContent":["export let manifest = [];\nexport let version = '';\n\n// Called by the runtime.\nexport function _register(m, v) {\n  manifest = m;\n  version = v;\n}\n","import { manifest, version } from '@parcel/service-worker';\n\n// Define the cache name\nconst cacheName = `psd-v${version ? version: 1}`;\n\n// Define the files to cache\nconst filesToCache = [\n  ...manifest,\n  '/',\n  '/index.html'\n];\n\n// Install the service worker and cache the app shell\nasync function install() {\n  try {\n    const cache = await caches.open(cacheName);\n    await cache.addAll(filesToCache);\n  } catch (err) {\n    console.error('install error =>', err);\n  }\n}\naddEventListener('install', e => e.waitUntil(install()));\n\nasync function activate() {\n  const keys = await caches.keys();\n  await Promise.all(\n    keys.map(key => key !== cacheName && caches.delete(key))\n  );\n}\naddEventListener('activate', e => e.waitUntil(activate()));\n\n// Serve cached content when offline\nself.addEventListener('fetch', event => {\n  event.respondWith(\n    caches.match(event.request)\n      .then(response => {\n        if (response) {\n          return response;\n        }\n\n        return fetch(event.request)\n          .then(response => {\n            if (response.ok) {\n              return caches.open(cacheName)\n                .then(cache => {\n                  cache.put(event.request, response.clone());\n                  return response;\n                })\n                .catch(error => console.error(error));\n            }\n\n            return response;\n          })\n          .catch(error => console.error(error));\n      })\n      .catch(error => console.error(error))\n  );\n});\n"],"names":["$42c6030ddf87be79$export$e538f94cc8cf4db8","$42c6030ddf87be79$export$83d89fbfd8236492","$8258663c9262e710$var$cacheName","$8258663c9262e710$var$filesToCache","addEventListener","e","waitUntil","async","cache","caches","open","addAll","err","console","error","$8258663c9262e710$var$install","keys","Promise","all","map","key","delete","$8258663c9262e710$var$activate","self","event","respondWith","match","request","then","response","fetch","ok","put","clone","catch"],"version":3,"file":"sw.79a1da13.js.map"}